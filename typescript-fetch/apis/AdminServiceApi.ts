/* tslint:disable */
/* eslint-disable */
/**
 * Online School
 * Online School Application is where students and teachers meet together
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineResponse200,
    InlineResponse200FromJSON,
    InlineResponse200ToJSON,
} from '../models';

/**
 * 
 */
export class AdminServiceApi extends runtime.BaseAPI {

    /**
     * Retrieve information about API.
     * Retrieve information about API.
     */
    async getApiInfoRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<InlineResponse200>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/version`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse200FromJSON(jsonValue));
    }

    /**
     * Retrieve information about API.
     * Retrieve information about API.
     */
    async getApiInfo(initOverrides?: RequestInit): Promise<InlineResponse200> {
        const response = await this.getApiInfoRaw(initOverrides);
        return await response.value();
    }

    /**
     * Reset all data.
     * Reset all data.
     */
    async resetDataRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/admin/reset`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Reset all data.
     * Reset all data.
     */
    async resetData(initOverrides?: RequestInit): Promise<void> {
        await this.resetDataRaw(initOverrides);
    }

}
